#Как и написано в основном файле, все функции перенесены в отдельный файл для удобства.
#Для работы всех функций нам понадобятся следующие библиотеки:
import math
import random
from time import sleep as sl


#Первая функция. Преобразование и проверка ввода значений длин сторон.
def check_side(number):
#На вводе мы получаем строковые данные. Данная функция запускает цикл 'while [тип данных input()] не равняется типу float'.
    while number != float:
#В блоке try мы пробуем преобразовать введенное str во float, если у нас это не получается (было введенно не числовое значение или не числовое значение с плаваюшей точкой),
#то мы переходим к блоку except, который просит ввести новое значение для переменной. После введения нового значения, цикл начинается заново.
        try:
            number = float(number)
#В случае, если нам удалось преобразовать str во float, мы переходим к проверке получившегося числового значения с плавающей точкой.
#Так как значение стороны не может быть меньше нуля или равняться ему, то мы просим обновить значение и цикл начинается заново.
            if number < 0 or number == 0:
                number = input("Значение стороны треугольника не может "
                          "быть отрицательным или равняться 0!\n")
#Если нам удалось преобразовать str во float, и получившееся значение не меньше нуля и не равняется ему, то мы возвращаем значение.
            else:
                return float(number)
        except:
            number = input('Введите числовое значение!\n')


#Вторая функция. Преобразование и проверка угла.
def check_angle(number):
# На вводе мы получаем строковые данные. Данная функция запускает цикл 'while [тип данных input()] не равняется типу float'.
    while number != float:
#В блоке try мы пробуем преобразовать введенное str во float, если у нас это не получается (было введенно не числовое значение или не числовое значение с плаваюшей точкой),
#то мы переходим к блоку except, который просит ввести новое значение для переменной. После введения нового значения, цикл начинается заново.
        try:
            number = float(number)
#В случае, если нам удалось преобразовать str во float, мы переходим к проверке получившегося числового значения с плавающей точкой.
#Так как значение угла не может быть меньше нуля или равняться ему, а также не может равняться 180 или превышать это значение, то мы просим обновить значение и цикл начинается заново.
            if number > 180 or number == 180:
                number = input('Значение градуса угла не может превышать 180 '
                          'или равняться 180!\n')
            elif number < 0 or number == 0:
                number = input('Значение градуса угла не может быть отрицательным '
                          'или равняться 0!\n')
#Если нам удалось преобразовать str во float, и значение соответсвует двум условиям, то мы возвращаем значение.
            else:
                return float(number)
        except:
            number = input('Введите числовое значение!\n')


#Третья функция. Позволяет увидеть "инструкцию" и пример вычислений.
def example():
#Используем библиотеку random для того, чтобы сгенерировать случайные значения.
#Числовые значения подобраны так, чтобы они соответсовали условиям правильности вычисления. Я не смог найти способ для того, чтобы сделать строгое неравеноство.
    side_one = round(random.uniform(0.001, 100), 2)
    side_two = round(random.uniform(0.001, 100), 2)
    angle = round(random.uniform(0.001, 179.001), 2)
#Здесь текстом описано, что вводим, и в каком интервале должны находиться значения. Для функции print ставим параметр flush на True, чтобы все появлялось постепенно
    print('\nВ первую очередь мы задаем значение длинны первой стороны.\n'
          'При этом важно учесть, что ее значение не может быть отрицательным или равным 0!\n'
          f'В нашем случае, выберем значение {side_one}.', flush = True)
#Здесь используем функцию библиотеки time (time.sleep), чтобы указать время в секундах после вывода на экран прошлого значения.
    sl(3)
    print('\nТеперь зададим значение для второй стороны.\n'
          'Ограничения те же.\n'
          f'Давайте выберем значение {side_two}.', flush = True)
    sl(2)
    print('\nТеперь давайте введем значение угла между этими двумя сторонами.\n'
          'При этом важно учесть, что его значение не может быть отрицательным или равняться 0, \n'
          'а также не может равняться 180 или превышать это значение.\n'
          f'Давайте остановимся на варианте {angle}.', flush = True)
    sl(4)
    print('\nПосле этого программа проводит вычисления по установленной формуле и выводит ответ.')
#Здесь мы приводим значение угла к радианам и подставляем остальные значения к формуле, при этом округляя их до двух знаков после запятой.
    angle = math.radians(angle)
    answer = round(math.sqrt(side_one ** 2 + side_two ** 2 - 2 * side_one * side_two * math.cos(angle)), 2)
#Переводим значение третьей стороны из float в str и с помощью метода .rstrip удаляем повторяющиеся подряд указанные значения с конца строки, чтобы ответ выглядело красивее.
    answer = str(answer).rstrip('0').rstrip('.')
#Возвращаем print с ответом
    return print(f'Вот он: {answer}\n')


#Четвертая функция. Проверка ввода для переменной option.
#В случае, если переменная option не содержит в себе одного из этих значений мы просим обновить ее значение для правильного перехода к остальным функциям в основной программе.
def transition_check(option):
    while option not in ['y', 'n', 'e', 'p']:
        option = input('Выберите из предложенного!\n'
                  'Введите "Y", чтобы продолжить выполнение программы.\n'
                  'Введите "N", чтобы завершить выполнение программы.\n'
                  'Введите "E", чтобы посмотреть пример выполнения программы.\n'
                  'Введите "P", чтобы посмотреть прошлые ответы.\n').lower()
    else:
        return option


#Пятая функция. Использует в себе первую и вторую функцию для приведения корректных значений и выполняет вычисления.
def calculate_answer():
    side_one = input('\nВведите значение длинны первой стороны:\n')
    side_one = check_side(side_one)
    side_two = input('Введите значение длинны второй стороны:\n')
    side_two = check_side(side_two)
    angle = input('Введите значение градуса угла между ними:\n')
    angle = check_angle(angle)
    angle = math.radians(angle)
    side_three = round(math.sqrt(side_one ** 2 + side_two ** 2 - 2 * side_one * side_two * math.cos(angle)), 2)
    side_three = str(side_three).rstrip('0').rstrip('.')
    print(f'\nЗначение длинны третьей стороны: {side_three}\n')
    return side_three
