#Все функции в отдельном файле для удобства
from func import example, calculate_answer, transition_check
from time import sleep as sl

#Основную часть кода, объединяющую все функции, сделал тоже функцией, чтобы можно было потом вдруг использовать.
def complex_menu():
#Создаем пустой лист, чтобы потом добавлять к нему все ответы.
    list_otvetov = []
    print('\nДавайте рассчитаем значение длины стороны треугольника по теореме косинусов!\n')
#Запускаем бесконечный цикл, чтобы упросить переход к разным функциям.
    while True:
        option = input('Введите "Y", чтобы продолжить выполнение программы.\n'
                       'Введите "N", чтобы завершить выполнение программы.\n'
                       'Введите "E", чтобы посмотреть пример выполнения программы.\n'
                       'Введите "P", чтобы посмотреть прошлые ответы.\n').lower()
#После осуществляения присвоения переменной option значения, сразу же проводится ее проверка с помощью функции transition_check
        option = transition_check(option)

#В случае, если значение переменной option равняется 'y', мы присваиваем переменной side_three значение возврата из функции calculate_answer.
#Добавляем это значение к ранее созданному листу, вносим переменную с функцией len для того, чтобы вычислить, сколько в листе значений.
#Переводим лист в строку, устанавливая разделить в виде новой строки с помощью метода .join
        if option == 'y':
            side_three = calculate_answer()
            list_otvetov.append(side_three)
            otvet_number = len(list_otvetov)
            str_otvetov = '\n'.join(list_otvetov)

#В случае, если значение переменной option равняется 'n', мы выводим пиктограмму кота и завершаем программу.
        if option == 'n':
            print('\nЗавершение работы программы...\n', flush=True)
            sl(3)
            print('  /\_/\\\n / @ @ \\\n( ~~0~~ )', flush=True)
            sl(1)
            quit()

#В случае, если значение переменной option равняется 'n', мы запускаем функцию example
        if option == 'e':
            example()

#В случае, если значение переменной option равняется 'p', мы запускаем следующую последовательность операций:
#Если переменная пуста, то мы выводим об этом сообщение и возвращаемся в начало цикла.
#Если переменная содержит в себе значения, то мы их выводим.
        if option == 'p':
            if not list_otvetov:
                print('\nПока ответов не было.\n')
            else:
                print(f'\nКоличество ответов: {otvet_number}\nПрошлые ответы: \n{str_otvetov}\n')

#При запуске мы сразу начинаем выполнять ключевую функцию.
complex_menu()